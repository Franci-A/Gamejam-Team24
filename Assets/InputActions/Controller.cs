//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/InputActions/Controller.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controller: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controller()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controller"",
    ""maps"": [
        {
            ""name"": ""AMcontrols"",
            ""id"": ""6e4037ce-3fdf-42c3-abb6-293150ca1bc5"",
            ""actions"": [
                {
                    ""name"": ""GoldenButtonLeft"",
                    ""type"": ""Button"",
                    ""id"": ""bf8375c9-d843-4d87-aaca-e873b7c23ed7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spades"",
                    ""type"": ""Button"",
                    ""id"": ""f722655f-8a49-4377-b803-ef3ece2c4dcb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Heart"",
                    ""type"": ""Button"",
                    ""id"": ""8154de2a-ec24-4146-bde3-575e2a271513"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Diamond"",
                    ""type"": ""Button"",
                    ""id"": ""2303c35a-0c82-4ecd-bcdc-78c6c4bc2694"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Clover"",
                    ""type"": ""Button"",
                    ""id"": ""f91ec917-fcf1-4804-af0f-e47bba683dc1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SquareButton1"",
                    ""type"": ""Button"",
                    ""id"": ""cf6f98d9-89f1-4473-87e1-b10f7eb3695d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SquareButton2"",
                    ""type"": ""Value"",
                    ""id"": ""471afc71-a897-4283-afb8-1bdeba2be295"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": ""Scale(factor=2)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SquareButton3"",
                    ""type"": ""Value"",
                    ""id"": ""3ef31d65-d560-4882-a985-cef1b7a39577"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": ""Scale(factor=3)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SquareButton4"",
                    ""type"": ""Value"",
                    ""id"": ""ea0d4a4b-7087-4dc8-94f1-8830e925b8e2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": ""Scale(factor=4)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""InsertCoin1"",
                    ""type"": ""Button"",
                    ""id"": ""b1741229-fd88-43e8-b3ff-018badd06b0b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InsertCoin2"",
                    ""type"": ""Button"",
                    ""id"": ""a7528e2b-b724-4e7e-8b09-71b5bd113168"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightGoldenButton"",
                    ""type"": ""Button"",
                    ""id"": ""27dc8f65-a13c-467e-a3ca-2fc55bfabdbf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""type"": ""Value"",
                    ""id"": ""8271b94b-5678-42bc-9fbc-213cf1b348d1"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d8071148-0def-4822-a2fe-5bb37ee67d1b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GoldenButtonLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a85e026-549e-4d1f-a5ad-563b82af7ed1"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spades"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81b107d8-85c2-4ba4-a292-c01c804d3b10"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heart"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1429a069-70d9-4e7e-bfc1-ac2651afc335"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Diamond"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3fa48fff-2563-4562-b1cb-703a65970e41"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Clover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd0eb146-9750-4d9e-85e5-382f6cebbaa4"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": ""Scale"",
                    ""groups"": """",
                    ""action"": ""SquareButton1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b34c77c-20c7-4e74-90d2-ebe1a2b617f4"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SquareButton2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""871ff329-7437-4f5b-9168-54ea6994206c"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SquareButton3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f000a2fe-214c-4043-b520-2c1ea34bf5ab"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SquareButton4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""190246ba-9386-4c84-87a8-6ac8c0d69d97"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InsertCoin1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18cde29c-23f4-4ab4-ba1c-82af77ec5085"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InsertCoin2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e453cb2b-fd33-4371-8319-b1c9c4c3f481"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightGoldenButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""aa8940bb-bed9-47ba-a7dd-3099e3e85c20"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""924a18df-6d2e-4f6d-9d1c-57d3758510ca"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2f5dc208-05c6-4bb0-a35c-9a708eac2cbd"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // AMcontrols
        m_AMcontrols = asset.FindActionMap("AMcontrols", throwIfNotFound: true);
        m_AMcontrols_GoldenButtonLeft = m_AMcontrols.FindAction("GoldenButtonLeft", throwIfNotFound: true);
        m_AMcontrols_Spades = m_AMcontrols.FindAction("Spades", throwIfNotFound: true);
        m_AMcontrols_Heart = m_AMcontrols.FindAction("Heart", throwIfNotFound: true);
        m_AMcontrols_Diamond = m_AMcontrols.FindAction("Diamond", throwIfNotFound: true);
        m_AMcontrols_Clover = m_AMcontrols.FindAction("Clover", throwIfNotFound: true);
        m_AMcontrols_SquareButton1 = m_AMcontrols.FindAction("SquareButton1", throwIfNotFound: true);
        m_AMcontrols_SquareButton2 = m_AMcontrols.FindAction("SquareButton2", throwIfNotFound: true);
        m_AMcontrols_SquareButton3 = m_AMcontrols.FindAction("SquareButton3", throwIfNotFound: true);
        m_AMcontrols_SquareButton4 = m_AMcontrols.FindAction("SquareButton4", throwIfNotFound: true);
        m_AMcontrols_InsertCoin1 = m_AMcontrols.FindAction("InsertCoin1", throwIfNotFound: true);
        m_AMcontrols_InsertCoin2 = m_AMcontrols.FindAction("InsertCoin2", throwIfNotFound: true);
        m_AMcontrols_RightGoldenButton = m_AMcontrols.FindAction("RightGoldenButton", throwIfNotFound: true);
        m_AMcontrols_Joystick = m_AMcontrols.FindAction("Joystick", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // AMcontrols
    private readonly InputActionMap m_AMcontrols;
    private List<IAMcontrolsActions> m_AMcontrolsActionsCallbackInterfaces = new List<IAMcontrolsActions>();
    private readonly InputAction m_AMcontrols_GoldenButtonLeft;
    private readonly InputAction m_AMcontrols_Spades;
    private readonly InputAction m_AMcontrols_Heart;
    private readonly InputAction m_AMcontrols_Diamond;
    private readonly InputAction m_AMcontrols_Clover;
    private readonly InputAction m_AMcontrols_SquareButton1;
    private readonly InputAction m_AMcontrols_SquareButton2;
    private readonly InputAction m_AMcontrols_SquareButton3;
    private readonly InputAction m_AMcontrols_SquareButton4;
    private readonly InputAction m_AMcontrols_InsertCoin1;
    private readonly InputAction m_AMcontrols_InsertCoin2;
    private readonly InputAction m_AMcontrols_RightGoldenButton;
    private readonly InputAction m_AMcontrols_Joystick;
    public struct AMcontrolsActions
    {
        private @Controller m_Wrapper;
        public AMcontrolsActions(@Controller wrapper) { m_Wrapper = wrapper; }
        public InputAction @GoldenButtonLeft => m_Wrapper.m_AMcontrols_GoldenButtonLeft;
        public InputAction @Spades => m_Wrapper.m_AMcontrols_Spades;
        public InputAction @Heart => m_Wrapper.m_AMcontrols_Heart;
        public InputAction @Diamond => m_Wrapper.m_AMcontrols_Diamond;
        public InputAction @Clover => m_Wrapper.m_AMcontrols_Clover;
        public InputAction @SquareButton1 => m_Wrapper.m_AMcontrols_SquareButton1;
        public InputAction @SquareButton2 => m_Wrapper.m_AMcontrols_SquareButton2;
        public InputAction @SquareButton3 => m_Wrapper.m_AMcontrols_SquareButton3;
        public InputAction @SquareButton4 => m_Wrapper.m_AMcontrols_SquareButton4;
        public InputAction @InsertCoin1 => m_Wrapper.m_AMcontrols_InsertCoin1;
        public InputAction @InsertCoin2 => m_Wrapper.m_AMcontrols_InsertCoin2;
        public InputAction @RightGoldenButton => m_Wrapper.m_AMcontrols_RightGoldenButton;
        public InputAction @Joystick => m_Wrapper.m_AMcontrols_Joystick;
        public InputActionMap Get() { return m_Wrapper.m_AMcontrols; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AMcontrolsActions set) { return set.Get(); }
        public void AddCallbacks(IAMcontrolsActions instance)
        {
            if (instance == null || m_Wrapper.m_AMcontrolsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_AMcontrolsActionsCallbackInterfaces.Add(instance);
            @GoldenButtonLeft.started += instance.OnGoldenButtonLeft;
            @GoldenButtonLeft.performed += instance.OnGoldenButtonLeft;
            @GoldenButtonLeft.canceled += instance.OnGoldenButtonLeft;
            @Spades.started += instance.OnSpades;
            @Spades.performed += instance.OnSpades;
            @Spades.canceled += instance.OnSpades;
            @Heart.started += instance.OnHeart;
            @Heart.performed += instance.OnHeart;
            @Heart.canceled += instance.OnHeart;
            @Diamond.started += instance.OnDiamond;
            @Diamond.performed += instance.OnDiamond;
            @Diamond.canceled += instance.OnDiamond;
            @Clover.started += instance.OnClover;
            @Clover.performed += instance.OnClover;
            @Clover.canceled += instance.OnClover;
            @SquareButton1.started += instance.OnSquareButton1;
            @SquareButton1.performed += instance.OnSquareButton1;
            @SquareButton1.canceled += instance.OnSquareButton1;
            @SquareButton2.started += instance.OnSquareButton2;
            @SquareButton2.performed += instance.OnSquareButton2;
            @SquareButton2.canceled += instance.OnSquareButton2;
            @SquareButton3.started += instance.OnSquareButton3;
            @SquareButton3.performed += instance.OnSquareButton3;
            @SquareButton3.canceled += instance.OnSquareButton3;
            @SquareButton4.started += instance.OnSquareButton4;
            @SquareButton4.performed += instance.OnSquareButton4;
            @SquareButton4.canceled += instance.OnSquareButton4;
            @InsertCoin1.started += instance.OnInsertCoin1;
            @InsertCoin1.performed += instance.OnInsertCoin1;
            @InsertCoin1.canceled += instance.OnInsertCoin1;
            @InsertCoin2.started += instance.OnInsertCoin2;
            @InsertCoin2.performed += instance.OnInsertCoin2;
            @InsertCoin2.canceled += instance.OnInsertCoin2;
            @RightGoldenButton.started += instance.OnRightGoldenButton;
            @RightGoldenButton.performed += instance.OnRightGoldenButton;
            @RightGoldenButton.canceled += instance.OnRightGoldenButton;
            @Joystick.started += instance.OnJoystick;
            @Joystick.performed += instance.OnJoystick;
            @Joystick.canceled += instance.OnJoystick;
        }

        private void UnregisterCallbacks(IAMcontrolsActions instance)
        {
            @GoldenButtonLeft.started -= instance.OnGoldenButtonLeft;
            @GoldenButtonLeft.performed -= instance.OnGoldenButtonLeft;
            @GoldenButtonLeft.canceled -= instance.OnGoldenButtonLeft;
            @Spades.started -= instance.OnSpades;
            @Spades.performed -= instance.OnSpades;
            @Spades.canceled -= instance.OnSpades;
            @Heart.started -= instance.OnHeart;
            @Heart.performed -= instance.OnHeart;
            @Heart.canceled -= instance.OnHeart;
            @Diamond.started -= instance.OnDiamond;
            @Diamond.performed -= instance.OnDiamond;
            @Diamond.canceled -= instance.OnDiamond;
            @Clover.started -= instance.OnClover;
            @Clover.performed -= instance.OnClover;
            @Clover.canceled -= instance.OnClover;
            @SquareButton1.started -= instance.OnSquareButton1;
            @SquareButton1.performed -= instance.OnSquareButton1;
            @SquareButton1.canceled -= instance.OnSquareButton1;
            @SquareButton2.started -= instance.OnSquareButton2;
            @SquareButton2.performed -= instance.OnSquareButton2;
            @SquareButton2.canceled -= instance.OnSquareButton2;
            @SquareButton3.started -= instance.OnSquareButton3;
            @SquareButton3.performed -= instance.OnSquareButton3;
            @SquareButton3.canceled -= instance.OnSquareButton3;
            @SquareButton4.started -= instance.OnSquareButton4;
            @SquareButton4.performed -= instance.OnSquareButton4;
            @SquareButton4.canceled -= instance.OnSquareButton4;
            @InsertCoin1.started -= instance.OnInsertCoin1;
            @InsertCoin1.performed -= instance.OnInsertCoin1;
            @InsertCoin1.canceled -= instance.OnInsertCoin1;
            @InsertCoin2.started -= instance.OnInsertCoin2;
            @InsertCoin2.performed -= instance.OnInsertCoin2;
            @InsertCoin2.canceled -= instance.OnInsertCoin2;
            @RightGoldenButton.started -= instance.OnRightGoldenButton;
            @RightGoldenButton.performed -= instance.OnRightGoldenButton;
            @RightGoldenButton.canceled -= instance.OnRightGoldenButton;
            @Joystick.started -= instance.OnJoystick;
            @Joystick.performed -= instance.OnJoystick;
            @Joystick.canceled -= instance.OnJoystick;
        }

        public void RemoveCallbacks(IAMcontrolsActions instance)
        {
            if (m_Wrapper.m_AMcontrolsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IAMcontrolsActions instance)
        {
            foreach (var item in m_Wrapper.m_AMcontrolsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_AMcontrolsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public AMcontrolsActions @AMcontrols => new AMcontrolsActions(this);
    public interface IAMcontrolsActions
    {
        void OnGoldenButtonLeft(InputAction.CallbackContext context);
        void OnSpades(InputAction.CallbackContext context);
        void OnHeart(InputAction.CallbackContext context);
        void OnDiamond(InputAction.CallbackContext context);
        void OnClover(InputAction.CallbackContext context);
        void OnSquareButton1(InputAction.CallbackContext context);
        void OnSquareButton2(InputAction.CallbackContext context);
        void OnSquareButton3(InputAction.CallbackContext context);
        void OnSquareButton4(InputAction.CallbackContext context);
        void OnInsertCoin1(InputAction.CallbackContext context);
        void OnInsertCoin2(InputAction.CallbackContext context);
        void OnRightGoldenButton(InputAction.CallbackContext context);
        void OnJoystick(InputAction.CallbackContext context);
    }
}
